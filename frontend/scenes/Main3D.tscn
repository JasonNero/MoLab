[gd_scene load_steps=6 format=3 uid="uid://b871xxj0dvj8w"]

[ext_resource type="Environment" uid="uid://bcrwyvnfsap3r" path="res://res/Environment.tres" id="2_ugxds"]
[ext_resource type="Animation" uid="uid://c0wmpl0beea2g" path="res://res/example_inference_animation.tres" id="3_ddwgq"]
[ext_resource type="Script" path="res://scripts/character_manager.gd" id="4_6ku83"]

[sub_resource type="CylinderMesh" id="CylinderMesh_xc4hr"]
top_radius = 40.0
bottom_radius = 20.0
height = 0.001
rings = 0
cap_bottom = false

[sub_resource type="AnimationLibrary" id="AnimationLibrary_4myri"]
_data = {
"example_inference_animation": ExtResource("3_ddwgq")
}

[node name="Main" type="Node3D"]

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.6, 8)
environment = ExtResource("2_ugxds")
current = true
fov = 40.0

[node name="LightmapProbe" type="LightmapProbe" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.71331, 0)

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource("2_ugxds")

[node name="Floor" type="MeshInstance3D" parent="."]
mesh = SubResource("CylinderMesh_xc4hr")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.52792, -0.378794, 0.760142, 9.42615e-10, 0.895028, 0.44601, -0.849294, -0.235458, 0.472503, 0, 2.47369, 0)

[node name="CharacterManager" type="Node3D" parent="."]
script = ExtResource("4_6ku83")
character_type = 4

[node name="AnimationPlayer" type="AnimationPlayer" parent="CharacterManager"]
unique_name_in_owner = true
root_node = NodePath("/root/@EditorNode@16894/@Panel@13/@VBoxContainer@14/DockHSplitLeftL/DockHSplitLeftR/DockHSplitMain/@VBoxContainer@25/DockVSplitCenter/@VSplitContainer@52/@VBoxContainer@53/@PanelContainer@98/MainScreen/@CanvasItemEditor@9280/@VSplitContainer@9102/@HSplitContainer@9104/@HSplitContainer@9106/@Control@9107/@SubViewportContainer@9108/@SubViewport@9109/Main/CharacterManager/lafan_skeleton/Model_Root")
libraries = {
"": SubResource("AnimationLibrary_4myri")
}
autoplay = "example_inference_animation"
